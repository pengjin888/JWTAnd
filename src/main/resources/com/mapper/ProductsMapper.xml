<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mapper.ProductsMapper" >
  <resultMap id="BaseResultMap" type="com.po.Products" >
    <result column="products_id" property="productsId" jdbcType="INTEGER" />
    <result column="income_price" property="incomePrice" jdbcType="DOUBLE" />
    <result column="income_date" property="incomeDate" jdbcType="DATE" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    products_id, income_price, income_date, name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.po.ProductsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.po.ProductsExample" >
    delete from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.po.Products" >
    insert into products (products_id, income_price, income_date, 
      name)
    values (#{productsId,jdbcType=INTEGER}, #{incomePrice,jdbcType=DOUBLE}, #{incomeDate,jdbcType=DATE}, 
      #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.po.Products" >
    insert into products
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="productsId != null" >
        products_id,
      </if>
      <if test="incomePrice != null" >
        income_price,
      </if>
      <if test="incomeDate != null" >
        income_date,
      </if>
      <if test="name != null" >
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="productsId != null" >
        #{productsId,jdbcType=INTEGER},
      </if>
      <if test="incomePrice != null" >
        #{incomePrice,jdbcType=DOUBLE},
      </if>
      <if test="incomeDate != null" >
        #{incomeDate,jdbcType=DATE},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.po.ProductsExample" resultType="java.lang.Integer" >
    select count(*) from products
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="select" resultMap="BaseResultMap">
    select * from products
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update products
    <set >
      <if test="record.productsId != null" >
        products_id = #{record.productsId,jdbcType=INTEGER},
      </if>
      <if test="record.incomePrice != null" >
        income_price = #{record.incomePrice,jdbcType=DOUBLE},
      </if>
      <if test="record.incomeDate != null" >
        income_date = #{record.incomeDate,jdbcType=DATE},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update products
    set products_id = #{record.productsId,jdbcType=INTEGER},
      income_price = #{record.incomePrice,jdbcType=DOUBLE},
      income_date = #{record.incomeDate,jdbcType=DATE},
      name = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>